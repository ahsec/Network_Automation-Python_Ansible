(applied_python)[ahernandez@ip-172-30-0-5 djproject]$ python manage.py migrate
Operations to perform:
  Synchronize unmigrated apps: staticfiles, messages
  Apply all migrations: admin, contenttypes, auth, sessions
Synchronizing apps without migrations:
  Creating tables...
    Running deferred SQL...
  Installing custom SQL...
Running migrations:
  Rendering model states... DONE
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying sessions.0001_initial... OK
(applied_python)[ahernandez@ip-172-30-0-5 djproject]$ ls net_system/
admin.py  admin.pyc  __init__.py  __init__.pyc  load_credentials.py  load_devices.py  migrations  models.py  models.pyc  tests.py  views.py
(applied_python)[ahernandez@ip-172-30-0-5 net_system]$ 
(applied_python)[ahernandez@ip-172-30-0-5 net_system]$ 
(applied_python)[ahernandez@ip-172-30-0-5 net_system]$ export DJANGO_SETTINGS_MODULE=djproject.settings
(applied_python)[ahernandez@ip-172-30-0-5 net_system]$ export PYTHONPATH=~/DJANGOX/djproject/
(applied_python)[ahernandez@ip-172-30-0-5 net_system]$ 
(applied_python)[ahernandez@ip-172-30-0-5 net_system]$ 
(applied_python)[ahernandez@ip-172-30-0-5 djproject]$ python manage.py makemigrations
Migrations for 'net_system':
  0001_initial.py:
    - Create model Credentials
    - Create model NetworkDevice
(applied_python)[ahernandez@ip-172-30-0-5 djproject]$ 
(applied_python)[ahernandez@ip-172-30-0-5 djproject]$ python manage.py migrate
Operations to perform:
  Synchronize unmigrated apps: staticfiles, messages
  Apply all migrations: admin, contenttypes, net_system, auth, sessions
Synchronizing apps without migrations:
  Creating tables...
    Running deferred SQL...
  Installing custom SQL...
Running migrations:
  Rendering model states... DONE
  Applying net_system.0001_initial... OK
(applied_python)[ahernandez@ip-172-30-0-5 djproject]$ 
(applied_python)[ahernandez@ip-172-30-0-5 djproject]$ python net_system/load_devices.py 
(<NetworkDevice: pynet-rtr2>, True)
(<NetworkDevice: pynet-sw1>, True)
(<NetworkDevice: pynet-sw2>, True)
(<NetworkDevice: pynet-sw3>, True)
(<NetworkDevice: pynet-sw4>, True)
(<NetworkDevice: juniper-srx>, True)
(applied_python)[ahernandez@ip-172-30-0-5 djproject]$ python net_system/load_credentials.py 
(<Credentials: pyclass>, True)
(<Credentials: admin1>, True)
(applied_python)[ahernandez@ip-172-30-0-5 djproject]$ 

(applied_python)[ahernandez@ip-172-30-0-5 djproject]$ 
(applied_python)[ahernandez@ip-172-30-0-5 djproject]$ python manage.py shell
Python 2.7.12 (default, Sep  1 2016, 22:14:00) 
[GCC 4.8.3 20140911 (Red Hat 4.8.3-9)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> 
>>> from net_system.models import NetworkDevice, Credentials
>>> net_devices = NetworkDevice.objects.all()
>>> net_devices
[<NetworkDevice: pynet-rtr1>, <NetworkDevice: pynet-rtr2>, <NetworkDevice: pynet-sw1>, <NetworkDevice: pynet-sw2>, <NetworkDevice: pynet-sw3>, <NetworkDevice: pynet-sw4>, <NetworkDevice: juniper-srx>]
>>> creds = Credentials.objects.all()
>>> creds
[<Credentials: pyclass>, <Credentials: admin1>]
>>> 


